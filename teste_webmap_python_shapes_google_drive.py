# -*- coding: utf-8 -*-
"""teste_webmap_python_shapes_google_drive.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1lQPafz0PA_l5ZHTtL1zG_RbF6vqGyIlj
"""

### Instalando as bibliotecas neccessárias
!pip install geopandas
!pip install folium
!pip install pandas

import geopandas as gpd
import folium
from folium import plugins
import pandas as pd
from shapely.geometry import Point



# URL da planilha compartilhada (deve ser publicada para a web)
url_csv = 'https://docs.google.com/spreadsheets/d/1IqNdReQjtv0ZIs4Z07stht-7QEZCKusPhnEvbTXPBWg/export?format=csv'

# Carregar a planilha diretamente em um DataFrame do Pandas
df = pd.read_csv(url_csv)

# Visualizar os dados
print(df.head())


# Criar uma coluna 'geometry' contendo objetos Point com base nas colunas de latitude e longitude
geometry = [Point(xy) for xy in zip(df.LONWGS84, df.LATWGS84)]

# Criar um GeoDataFrame a partir do DataFrame e da coluna de geometria
gdf = gpd.GeoDataFrame(df, geometry=geometry)

# Visualizar o GeoDataFrame
print(gdf.head())



# Calcular os limites para definir o zoom inicial que exiba a extensão do Brasil
brasil_bounds = gdf.total_bounds

# Criar um mapa base com folium
m = folium.Map(location=[brasil_bounds[1], brasil_bounds[0]], zoom_start=4)  # Zoom inicial ajustado para exibir a extensão do Brasil

# Adicionar a camada de manchas de calor ao mapa
heat_data = [[point.xy[1][0], point.xy[0][0]] for point in gdf['geometry'].centroid]
plugins.HeatMap(heat_data).add_to(m)

# Adicionar a camada do shapefile ao mapa com estilo de círculos pretos pequenos
for idx, row in gdf.iterrows():
    folium.CircleMarker(location=[row['geometry'].y, row['geometry'].x], radius=3, color='black', fill=True, fill_color='black').add_to(m)

# Exibir o mapa
m